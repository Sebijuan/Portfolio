import React, { useState, useRef } from 'react';
import '../Estilos/Blog.css'; // Aseg√∫rate de tener un archivo CSS correspondiente para los estilos

function Blog() {
    // Estado para manejar qu√© posts est√°n expandidos
    const [expandedPosts, setExpandedPosts] = useState({});
    // Referencias para los posts del blog
    const postRefs = useRef({});

    // Funci√≥n para alternar la expansi√≥n de un post
    const toggleExpand = (postId) => {
        setExpandedPosts(prevState => {
            const newState = {
                ...prevState,
                [postId]: !prevState[postId]
            };
            // Si el post est√° expandido, hacer scroll hacia √©l
            if (newState[postId]) {
                postRefs.current[postId].scrollIntoView({ behavior: 'smooth' });
            }
            return newState;
        });
    };

    return (
        <>
            <section id="blog">
                <div className="blog-container" style={{ paddingBottom: '50px' }}>
                    <h2>Blog</h2>
                    <div className="blog-content">
                        {/* Primer post del blog */}
                        <article className="blog-post" key="post-1" ref={el => postRefs.current[1] = el}>
                            <h3>Mi Primer Proyecto Web</h3>
                            <p>
                                En este post, comparto mi experiencia desarrollando mi primer proyecto web. Desde la planificaci√≥n inicial hasta la implementaci√≥n final, 
                                detallo los desaf√≠os que enfrent√© y las lecciones que aprend√≠ a lo largo del camino.
                            </p>
                            {expandedPosts[1] && (
                                <p>
                                    Crear mi primer proyecto web fue un reto emocionante. Quer√≠a desarrollar una p√°gina interactiva para amantes del tuning, donde pudieran explorar y personalizar coches. Aprender a manejar JavaScript para crear galer√≠as din√°micas y configuradores fue esencial, pero tambi√©n enfrent√© desaf√≠os con la optimizaci√≥n de carga y la adaptaci√≥n a dispositivos m√≥viles. Este proyecto me ense√±√≥ mucho sobre desarrollo web, dise√±o responsivo y la importancia de ofrecer una experiencia de usuario fluida. ¬°Un gran primer paso para seguir aprendiendo! üöóüí® #WebDevelopment #Tuning #Personalizaci√≥n
                                </p>
                            )}
                            <button onClick={() => toggleExpand(1)} className="read-more">
                                {expandedPosts[1] ? 'Leer menos' : 'Leer m√°s'}
                            </button>
                        </article>
                        {/* Segundo post del blog */}
                        <article className="blog-post" key="post-2" ref={el => postRefs.current[2] = el}>
                            <h3>Consejos para Aprender JavaScript</h3>
                            <p>
                                JavaScript es una de las tecnolog√≠as m√°s importantes en el desarrollo web. En este art√≠culo, ofrezco algunos consejos y recursos √∫tiles 
                                para aquellos que est√°n comenzando a aprender JavaScript.
                            </p>
                            {expandedPosts[2] && (
                                <p>
                                   Para aprender JavaScript de manera efectiva, comienza con los fundamentos como variables, funciones y el DOM. Practica con proyectos peque√±os y usa la consola del navegador para probar c√≥digo. Aprende asincron√≠a con setTimeout, Promises y async/await para manejar APIs. Consulta recursos como MDN Web Docs y JavaScript.info. Una vez dominado lo b√°sico, explora frameworks como React o Vue. Mejora tus habilidades resolviendo desaf√≠os en CodeWars o LeetCode y colaborando en proyectos de c√≥digo abierto en GitHub. La pr√°ctica constante y la participaci√≥n en la comunidad acelerar√°n tu aprendizaje.
                                </p>
                            )}
                            <button onClick={() => toggleExpand(2)} className="read-more">
                                {expandedPosts[2] ? 'Leer menos' : 'Leer m√°s'}
                            </button>
                        </article>
                       
                    </div>
                </div>
            </section>
        </>
    );
}

export default Blog;
